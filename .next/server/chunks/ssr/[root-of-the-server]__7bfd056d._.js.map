{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/owentillger/Documents/GitHub/TruthGuard/src/app/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef, useState } from 'react';\n\n// Story type definition\ninterface Story {\n  id: string;\n  title: string;\n  category: 'DEFENSE' | 'ECONOMICS' | 'CYBER' | 'ENERGY' | 'POLITICS';\n  severity: 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW';\n  location: { lat: number; lng: number; name: string; country: string };\n  reliability: number;\n  bias: number;\n  impact: number;\n  sources: number;\n  timestamp: Date;\n  summary: string;\n  keyPlayers: string[];\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL';\n  connections?: string[];\n  truthScore?: number;\n  abstractedContent?: string;\n  biasedClaims?: string[];\n  verifiedFacts?: string[];\n}\n\n// Enhanced Globe rendering class with better detail\nclass ASCIIGlobe {\n  private canvas: string[][];\n  private width: number;\n  private height: number;\n  private radius: number;\n  private rotation: number = 0;\n  private tilt: number = 0.3;\n  private zoom: number = 1.0;\n  private autoRotate: boolean = true;\n  private characters = ' .·:+=#@█';\n\n  setRotation(rotation: number) {\n    this.rotation = rotation;\n  }\n\n  setAutoRotate(autoRotate: boolean) {\n    this.autoRotate = autoRotate;\n  }\n\n  getAutoRotate(): boolean {\n    return this.autoRotate;\n  }\n\n  setZoom(zoom: number) {\n    this.zoom = Math.max(0.8, Math.min(2.0, zoom));\n  }\n\n  getZoom(): number {\n    return this.zoom;\n  }\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this.radius = Math.min(width, height) * 0.4;\n    this.canvas = Array(height).fill(null).map(() => Array(width).fill(' '));\n  }\n\n  private latLngTo3D(lat: number, lng: number, rotation: number): { x: number; y: number; z: number } {\n    const phi = (90 - lat) * Math.PI / 180;\n    const theta = (lng + rotation) * Math.PI / 180;\n\n    const x = this.radius * Math.sin(phi) * Math.cos(theta) * this.zoom;\n    const y = this.radius * Math.cos(phi) * this.zoom;\n    const z = this.radius * Math.sin(phi) * Math.sin(theta) * this.zoom;\n\n    const tiltedY = y * Math.cos(this.tilt) - z * Math.sin(this.tilt);\n    const tiltedZ = y * Math.sin(this.tilt) + z * Math.cos(this.tilt);\n\n    return { x, y: tiltedY, z: tiltedZ };\n  }\n\n  private project3DTo2D(x: number, y: number, z: number): { x: number; y: number; visible: boolean } {\n    const screenX = Math.round(x + this.width / 2);\n    const screenY = Math.round(-y + this.height / 2);\n    const visible = z > -this.radius * 0.8 * this.zoom;\n\n    return { x: screenX, y: screenY, visible };\n  }\n\n  clear() {\n    this.canvas = Array(this.height).fill(null).map(() => Array(this.width).fill(' '));\n  }\n\n  drawGlobe() {\n    // Draw the globe sphere with higher resolution\n    for (let lat = -90; lat <= 90; lat += 2) {\n      for (let lng = -180; lng <= 180; lng += 2) {\n        const { x, y, z } = this.latLngTo3D(lat, lng, this.rotation);\n        const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n\n        if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n          const brightness = Math.max(0, Math.min(1, (z + this.radius * this.zoom) / (2 * this.radius * this.zoom)));\n          \n          const isLand = this.isDetailedLandmass(lat, lng);\n          const isCoastline = this.isCoastline(lat, lng);\n          const elevation = this.getElevation(lat, lng);\n          \n          if (isCoastline) {\n            this.canvas[screenY][screenX] = brightness > 0.3 ? '≈' : '~';\n          } else if (isLand) {\n            if (elevation > 0.7) {\n              this.canvas[screenY][screenX] = brightness > 0.3 ? '▲' : '^';\n            } else if (elevation > 0.4) {\n              this.canvas[screenY][screenX] = brightness > 0.3 ? '█' : '▓';\n            } else {\n              this.canvas[screenY][screenX] = brightness > 0.3 ? '▓' : '░';\n            }\n          } else {\n            // Ocean with wave patterns\n            const wavePattern = (Math.sin(lat * 0.1 + lng * 0.1) > 0);\n            this.canvas[screenY][screenX] = brightness > 0.3 ? (wavePattern ? '~' : '≈') : '·';\n          }\n        }\n      }\n    }\n\n    // Draw latitude lines (more detailed)\n    for (let lat = -75; lat <= 75; lat += 15) {\n      for (let lng = -180; lng <= 180; lng += 1) {\n        const { x, y, z } = this.latLngTo3D(lat, lng, this.rotation);\n        const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n\n        if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n          if (this.canvas[screenY][screenX] === ' ' || this.canvas[screenY][screenX] === '·') {\n            this.canvas[screenY][screenX] = '·';\n          }\n        }\n      }\n    }\n\n    // Draw longitude lines (more detailed)\n    for (let lng = -180; lng <= 180; lng += 15) {\n      for (let lat = -90; lat <= 90; lat += 1) {\n        const { x, y, z } = this.latLngTo3D(lat, lng, this.rotation);\n        const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n\n        if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n          if (this.canvas[screenY][screenX] === ' ' || this.canvas[screenY][screenX] === '·') {\n            this.canvas[screenY][screenX] = '·';\n          }\n        }\n      }\n    }\n\n    // Draw equator and prime meridian\n    for (let i = -180; i <= 180; i += 1) {\n      // Equator\n      const { x, y, z } = this.latLngTo3D(0, i, this.rotation);\n      const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n      if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n        if (this.canvas[screenY][screenX] === ' ' || this.canvas[screenY][screenX] === '·') {\n          this.canvas[screenY][screenX] = '=';\n        }\n      }\n\n      // Prime meridian\n      const pm = this.latLngTo3D(i / 2, 0, this.rotation);\n      const pmScreen = this.project3DTo2D(pm.x, pm.y, pm.z);\n      if (pmScreen.visible && pmScreen.x >= 0 && pmScreen.x < this.width && pmScreen.y >= 0 && pmScreen.y < this.height) {\n        if (this.canvas[pmScreen.y][pmScreen.x] === ' ' || this.canvas[pmScreen.y][pmScreen.x] === '·') {\n          this.canvas[pmScreen.y][pmScreen.x] = '|';\n        }\n      }\n    }\n  }\n\n  // More detailed landmass detection with coastlines\n  private isDetailedLandmass(lat: number, lng: number): boolean {\n    // North America with more detail\n    if (lat > 15 && lat < 75 && lng > -170 && lng < -50) {\n      // Exclude Gulf of Mexico\n      if (lat < 30 && lat > 18 && lng > -98 && lng < -80) return false;\n      // Exclude Hudson Bay\n      if (lat > 50 && lat < 65 && lng > -95 && lng < -75) return false;\n      return true;\n    }\n    \n    // South America with detail\n    if (lat > -55 && lat < 15 && lng > -85 && lng < -35) {\n      // Narrow at Panama\n      if (lat > 5 && lat < 10 && lng < -80) return true;\n      if (lat > -5 && lat < 5 && lng > -70) return true;\n      return true;\n    }\n    \n    // Europe with Mediterranean\n    if (lat > 35 && lat < 72 && lng > -25 && lng < 60) {\n      // Mediterranean Sea\n      if (lat > 30 && lat < 45 && lng > -5 && lng < 35) {\n        if (lat < 38) return false;\n        if (lat < 42 && lng > 10 && lng < 30) return false;\n      }\n      return true;\n    }\n    \n    // Africa with detail\n    if (lat > -35 && lat < 38 && lng > -20 && lng < 55) {\n      // Red Sea\n      if (lat > 12 && lat < 30 && lng > 32 && lng < 44) return false;\n      return true;\n    }\n    \n    // Asia with detail\n    if (lat > -10 && lat < 75 && lng > 25 && lng < 180) {\n      // Exclude major water bodies\n      if (lat > 30 && lat < 50 && lng > 45 && lng < 60) return false; // Caspian Sea\n      return true;\n    }\n    \n    // Australia\n    if (lat > -45 && lat < -10 && lng > 110 && lng < 155) {\n      return true;\n    }\n    \n    // Indonesia\n    if (lat > -10 && lat < 10 && lng > 95 && lng < 140) {\n      if ((lng > 100 && lng < 110) || (lng > 115 && lng < 125) || (lng > 130 && lng < 135)) {\n        return true;\n      }\n    }\n    \n    // New Zealand\n    if (lat > -48 && lat < -34 && lng > 165 && lng < 179) {\n      return true;\n    }\n    \n    // Antarctica\n    if (lat < -60) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private isCoastline(lat: number, lng: number): boolean {\n    if (!this.isDetailedLandmass(lat, lng)) return false;\n    \n    // Check if any neighbor is water\n    for (let dlat = -2; dlat <= 2; dlat += 2) {\n      for (let dlng = -2; dlng <= 2; dlng += 2) {\n        if (dlat === 0 && dlng === 0) continue;\n        if (!this.isDetailedLandmass(lat + dlat, lng + dlng)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private getElevation(lat: number, lng: number): number {\n    // Himalayas\n    if (lat > 25 && lat < 35 && lng > 75 && lng < 95) return 0.9;\n    // Alps\n    if (lat > 44 && lat < 48 && lng > 5 && lng < 15) return 0.8;\n    // Rockies\n    if (lat > 30 && lat < 50 && lng > -120 && lng < -100) return 0.7;\n    // Andes\n    if (lat > -55 && lat < 10 && lng > -75 && lng < -65) return 0.8;\n    \n    return 0.2;\n  }\n\n  drawMarker(lat: number, lng: number, symbol: string, highlight: boolean = false) {\n    const { x, y, z } = this.latLngTo3D(lat, lng, this.rotation);\n    const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n\n    if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n      this.canvas[screenY][screenX] = symbol;\n\n      if (highlight) {\n        // Draw a cross pattern for highlight\n        const positions = [\n          [-1, 0], [1, 0], [0, -1], [0, 1]\n        ];\n        \n        positions.forEach(([dx, dy]) => {\n          const nx = screenX + dx;\n          const ny = screenY + dy;\n          if (nx >= 0 && nx < this.width && ny >= 0 && ny < this.height) {\n            if (this.canvas[ny][nx] === ' ' || this.canvas[ny][nx] === '·' || this.canvas[ny][nx] === '~') {\n              this.canvas[ny][nx] = '+';\n            }\n          }\n        });\n      }\n    }\n\n    return { visible, screenX, screenY };\n  }\n\n  drawConnection(lat1: number, lng1: number, lat2: number, lng2: number) {\n    const steps = 30;\n    for (let i = 0; i <= steps; i++) {\n      const t = i / steps;\n      \n      // Great circle interpolation\n      const lat = lat1 + (lat2 - lat1) * t;\n      const lng = lng1 + (lng2 - lng1) * t;\n\n      const { x, y, z } = this.latLngTo3D(lat, lng, this.rotation);\n      const { x: screenX, y: screenY, visible } = this.project3DTo2D(x, y, z);\n\n      if (visible && screenX >= 0 && screenX < this.width && screenY >= 0 && screenY < this.height) {\n        const current = this.canvas[screenY][screenX];\n        if (current === ' ' || current === '·' || current === '~' || current === '≈') {\n          this.canvas[screenY][screenX] = i % 4 === 0 ? '◦' : '·';\n        }\n      }\n    }\n  }\n\n  rotate(delta: number) {\n    this.rotation = (this.rotation + delta) % 360;\n  }\n\n  setTilt(tilt: number) {\n    this.tilt = Math.max(-Math.PI / 3, Math.min(Math.PI / 3, tilt));\n  }\n\n  toString(): string {\n    return this.canvas.map(row => row.join('')).join('\\n');\n  }\n}\n\nconst ModernProgressBar = ({ value, max = 100, width = 20, showPercentage = true }: { value: number; max?: number; width?: number; showPercentage?: boolean }) => {\n  const filled = Math.round((value / max) * width);\n  const bar = `█`.repeat(filled) + `░`.repeat(width - filled);\n  return showPercentage ? `[${bar}] ${value}%` : `[${bar}]`;\n};\n\nexport default function TruthGuardASCII() {\n  const [stories, setStories] = useState<Story[]>([]);\n  const [selectedStory, setSelectedStory] = useState<Story | null>(null);\n  const [hoveredStory, setHoveredStory] = useState<Story | null>(null);\n  const [terminalOutput, setTerminalOutput] = useState<string[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [globalStats, setGlobalStats] = useState({\n    totalSources: 0,\n    avgTruthScore: 0,\n    criticalBias: 0,\n    activeRegions: 0,\n  });\n  const [globeRotation, setGlobeRotation] = useState(0);\n  const [globeTilt, setGlobeTilt] = useState(0.3);\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n  const [isMouseOverGlobe, setIsMouseOverGlobe] = useState(false);\n  const [globeZoom, setGlobeZoom] = useState(1.0);\n\n  const terminalRef = useRef<HTMLDivElement>(null);\n  const globeRef = useRef<ASCIIGlobe | null>(null);\n  const animationRef = useRef<number | undefined>(undefined);\n\n  const sampleStories: Story[] = [\n    {\n      id: '1',\n      title: 'NATO Eastern European Military Movement Reports',\n      category: 'DEFENSE',\n      severity: 'CRITICAL',\n      location: { lat: 52.23, lng: 21.01, name: 'Warsaw', country: 'Poland' },\n      reliability: 74,\n      bias: 32,\n      impact: 89,\n      sources: 147,\n      timestamp: new Date(),\n      summary: 'Multiple sources report military movements. Truth analysis indicates 68% factual content with significant bias from all sides.',\n      keyPlayers: ['NATO', 'Pentagon', 'Polish MoD'],\n      sentiment: 'NEGATIVE',\n      connections: ['2', '3'],\n      truthScore: 68,\n      abstractedContent: 'Military alliance conducting routine exercises in member state territory. Scale and timing subject to interpretation bias.',\n      biasedClaims: ['Unprecedented military buildup', 'Aggressive posturing', 'Defensive response only'],\n      verifiedFacts: ['Military exercises scheduled', 'Standard NATO protocols followed', '3,000 personnel involved'],\n    },\n    {\n      id: '2',\n      title: 'Global Semiconductor Supply Chain Analysis',\n      category: 'ECONOMICS',\n      severity: 'HIGH',\n      location: { lat: 25.03, lng: 121.56, name: 'Taipei', country: 'Taiwan' },\n      reliability: 81,\n      bias: 18,\n      impact: 76,\n      sources: 238,\n      timestamp: new Date(),\n      summary: 'Conflicting reports on chip shortage severity. Mean analysis suggests 15-25% capacity impact, not 40% as claimed.',\n      keyPlayers: ['TSMC', 'Samsung', 'Intel'],\n      sentiment: 'NEGATIVE',\n      connections: ['1', '3'],\n      truthScore: 81,\n      abstractedContent: 'Semiconductor production experiencing moderate constraints. Market speculation amplifying actual impact metrics.',\n      biasedClaims: ['Industry collapse imminent', 'No shortage exists', '40% production drop'],\n      verifiedFacts: ['15-25% capacity reduction', 'Supply chain delays averaging 3 weeks', 'Automotive sector most affected'],\n    },\n    {\n      id: '3',\n      title: 'Financial Infrastructure Security Event',\n      category: 'CYBER',\n      severity: 'CRITICAL',\n      location: { lat: 38.89, lng: -77.03, name: 'Washington DC', country: 'USA' },\n      reliability: 58,\n      bias: 45,\n      impact: 92,\n      sources: 89,\n      timestamp: new Date(),\n      summary: 'Unverified claims of coordinated attacks. Truth score low due to conflicting technical details across sources.',\n      keyPlayers: ['FBI', 'CISA', 'Banks'],\n      sentiment: 'NEGATIVE',\n      connections: ['1', '2', '4'],\n      truthScore: 58,\n      abstractedContent: 'Security incident reported at financial institutions. Technical specifics unconfirmed. Standard protocols activated.',\n      biasedClaims: ['State-sponsored attack', 'System completely compromised', 'Minor glitch only'],\n      verifiedFacts: ['Security protocols activated', 'No confirmed data breach', 'Investigation ongoing'],\n    },\n    {\n      id: '4',\n      title: 'European Energy Infrastructure Investment',\n      category: 'ENERGY',\n      severity: 'MEDIUM',\n      location: { lat: 51.50, lng: -0.12, name: 'London', country: 'UK' },\n      reliability: 85,\n      bias: 22,\n      impact: 68,\n      sources: 131,\n      timestamp: new Date(),\n      summary: 'Investment figures vary by €200B across sources. Averaged analysis indicates €350B most likely figure.',\n      keyPlayers: ['EU Commission', 'UK Gov'],\n      sentiment: 'POSITIVE',\n      connections: ['3'],\n      truthScore: 85,\n      abstractedContent: 'Major renewable energy investment announced. Actual commitment level between €300-400B based on source reconciliation.',\n      biasedClaims: ['€500B guaranteed', 'Mere political gesture', 'Immediate implementation'],\n      verifiedFacts: ['€350B median commitment', '5-year rollout plan', '12 member states participating'],\n    },\n    {\n      id: '5',\n      title: 'Pacific Trade Route Disruption Claims',\n      category: 'ECONOMICS',\n      severity: 'HIGH',\n      location: { lat: 35.67, lng: 139.65, name: 'Tokyo', country: 'Japan' },\n      reliability: 72,\n      bias: 28,\n      impact: 83,\n      sources: 156,\n      timestamp: new Date(),\n      summary: 'Shipping delays reported with varying severity. Analysis shows 20% impact, not 60% as some sources claim.',\n      keyPlayers: ['Shipping Corps', 'Port Authorities'],\n      sentiment: 'NEGATIVE',\n      connections: ['2'],\n      truthScore: 72,\n      abstractedContent: 'Moderate shipping delays affecting Pacific routes. Weather and port congestion primary factors.',\n      biasedClaims: ['Complete route closure', '60% capacity loss', 'No significant impact'],\n      verifiedFacts: ['20% delay increase', '2-3 day average delays', 'Alternative routes available'],\n    },\n  ];\n\n  useEffect(() => {\n    setStories(sampleStories);\n\n    const stats = {\n      totalSources: sampleStories.reduce((acc, s) => acc + s.sources, 0),\n      avgTruthScore: Math.round(sampleStories.reduce((acc, s) => acc + (s.truthScore || 0), 0) / sampleStories.length),\n      criticalBias: sampleStories.filter(s => s.bias > 30).length,\n      activeRegions: new Set(sampleStories.map(s => s.location.country)).size,\n    };\n    setGlobalStats(stats);\n\n    globeRef.current = new ASCIIGlobe(80, 40);\n\n    addTerminalLine('█ TRUTHGUARD SYSTEM INITIALIZED');\n    addTerminalLine(`├─ Connected to ${stats.activeRegions} regions`);\n    addTerminalLine(`├─ Monitoring ${stats.totalSources} sources`);\n    addTerminalLine(`├─ Global truth average: ${stats.avgTruthScore}%`);\n    addTerminalLine(`└─ System ready`);\n  }, []);\n\n  useEffect(() => {\n    const animate = () => {\n      if (!isMouseOverGlobe && globeRef.current?.getAutoRotate()) {\n        setGlobeRotation(prev => (prev + 0.5) % 360);\n      }\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animationRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isMouseOverGlobe]);\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    setIsDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!isDragging) return;\n\n    const deltaX = e.clientX - lastMousePos.x;\n    const deltaY = e.clientY - lastMousePos.y;\n\n    setGlobeRotation(prev => (prev - deltaX * 0.5) % 360);\n    setGlobeTilt(prev => Math.max(-1, Math.min(1, prev + deltaY * 0.01)));\n\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleZoomIn = () => {\n    if (globeRef.current) {\n      const newZoom = globeRef.current.getZoom() + 0.1;\n      globeRef.current.setZoom(newZoom);\n      setGlobeZoom(newZoom);\n    }\n  };\n\n  const handleZoomOut = () => {\n    if (globeRef.current) {\n      const newZoom = globeRef.current.getZoom() - 0.1;\n      globeRef.current.setZoom(newZoom);\n      setGlobeZoom(newZoom);\n    }\n  };\n\n  const addTerminalLine = (line: string) => {\n    setTerminalOutput(prev => [...prev, line]);\n    setTimeout(() => {\n      if (terminalRef.current) {\n        terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n      }\n    }, 0);\n  };\n\n  const clearTerminal = () => {\n    setTerminalOutput([\n      '█ TRUTHGUARD TERMINAL v0.0.1',\n    ]);\n  };\n\n  const analyzeStory = (story: Story) => {\n    clearTerminal();\n    setIsProcessing(true);\n    setScanProgress(0);\n    setSelectedStory(story);\n\n    addTerminalLine(`├─ ANALYZING: ${story.title}`);\n    addTerminalLine(`├─ Location: ${story.location.name}, ${story.location.country}`);\n    addTerminalLine(`├─ Aggregating ${story.sources} sources...`);\n    addTerminalLine('│');\n\n    const steps = [\n      { p: 20, msg: '├─ Cross-referencing primary sources...' },\n      { p: 40, msg: '├─ Detecting bias patterns...' },\n      { p: 60, msg: '├─ Verifying factual claims...' },\n      { p: 80, msg: '├─ Generating abstracted content...' },\n      { p: 100, msg: '└─ Analysis complete.' },\n    ];\n\n    steps.forEach(({ p, msg }, index) => {\n      setTimeout(() => {\n        setScanProgress(p);\n        addTerminalLine(msg);\n\n        if (p === 100) {\n          setIsProcessing(false);\n          addTerminalLine('|');\n          addTerminalLine(`█ TRUTH SCORE: ${story.truthScore ?? 0}%`);\n          addTerminalLine(`█ BIAS LEVEL: ${story.bias}%`);\n          addTerminalLine('');\n          addTerminalLine('├─ ABSTRACTED CONTENT:');\n          addTerminalLine(`│  ${story.abstractedContent ?? 'N/A'}`);\n          addTerminalLine('│');\n          addTerminalLine('└─ VERIFIED FACTS:');\n          story.verifiedFacts?.forEach(fact => {\n            addTerminalLine(`   ✓ ${fact}`);\n          });\n        }\n      }, index * 400);\n    });\n  };\n\n  const getMarkerSymbol = (category: string, severity: string) => {\n    const symbols: { [key: string]: { [key: string]: string } } = {\n      DEFENSE: { CRITICAL: '◉', HIGH: '●', MEDIUM: '○', LOW: '·' },\n      ECONOMICS: { CRITICAL: '◉', HIGH: '●', MEDIUM: '○', LOW: '·' },\n      CYBER: { CRITICAL: '▲', HIGH: '△', MEDIUM: '▽', LOW: '·' },\n      ENERGY: { CRITICAL: '★', HIGH: '☆', MEDIUM: '✦', LOW: '·' },\n      POLITICS: { CRITICAL: '◆', HIGH: '◇', MEDIUM: '◈', LOW: '·' },\n    };\n    return symbols[category]?.[severity] || '•';\n  };\n\n  const renderGlobe = () => {\n    const globe = globeRef.current;\n    if (!globe) return '';\n\n    globe.clear();\n    globe.setRotation(globeRotation);\n    globe.setTilt(globeTilt);\n    globe.drawGlobe();\n\n    stories.forEach(story => {\n      if (story.connections) {\n        story.connections.forEach(targetId => {\n          const target = stories.find(s => s.id === targetId);\n          if (target) {\n            globe.drawConnection(\n              story.location.lat,\n              story.location.lng,\n              target.location.lat,\n              target.location.lng\n            );\n          }\n        });\n      }\n    });\n\n    stories.forEach(story => {\n      const symbol = getMarkerSymbol(story.category, story.severity);\n      const isSelected = selectedStory?.id === story.id;\n      const isHovered = hoveredStory?.id === story.id;\n      globe.drawMarker(story.location.lat, story.location.lng, symbol, isSelected || isHovered || story.severity === 'CRITICAL');\n    });\n\n    return globe.toString();\n  };\n\n  // Calculate terminal height dynamically to align with story details\n  const getTerminalHeight = () => {\n    if (!selectedStory) return 'h-[250px]';\n    // Match the height of the story details panel when displayed\n    return 'h-[420px]';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-green-400 font-mono p-4\">\n      <style jsx global>{`\n        @import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;700&display=swap');\n\n        body {\n          font-family: 'Fira Code', monospace;\n          background: #000;\n          color: #00ff00;\n          margin: 0;\n          overflow-x: hidden;\n        }\n\n        ::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        ::-webkit-scrollbar-track {\n          background: #001100;\n          border: 1px solid #003300;\n        }\n\n        ::-webkit-scrollbar-thumb {\n          background: rgba(0, 226, 119, 1);\n        }\n\n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.5; }\n        }\n\n        .pulse {\n          animation: pulse 2s infinite;\n        }\n\n        @keyframes blink {\n          0%, 50% { opacity: 1; }\n          51%, 100% { opacity: 0; }\n        }\n\n        .blink {\n          animation: blink 1s infinite;\n        }\n\n        .terminal-font {\n          font-family: 'Fira Code', monospace;\n          font-weight: 400;\n        }\n\n        .rounded-border {\n          border-radius: 4px;\n        }\n\n        .border-glow-green {\n          box-shadow: 0 0 10px rgba(0, 255, 0, 0.1), inset 0 0 10px rgba(0, 255, 0, 0.02);\n        }\n\n        .border-glow-yellow {\n          box-shadow: 0 0 10px rgba(255, 255, 0, 0.1), inset 0 0 10px rgba(255, 255, 0, 0.02);\n        }\n\n        .border-glow-red {\n          box-shadow: 0 0 10px rgba(255, 0, 0, 0.1), inset 0 0 10px rgba(255, 0, 0, 0.02);\n        }\n\n        .story-card-hover {\n          background: rgba(0, 255, 0, 0.03);\n          border-color: rgba(0, 255, 0, 0.8);\n        }\n\n        .story-card-selected {\n          background: rgba(255, 255, 0, 0.05);\n          border-color: rgba(255, 255, 0, 0.8);\n        }\n\n        .zoom-button {\n          background: transparent;\n          border: 1px solid rgba(0, 226, 119, 1);\n          color: rgba(0, 226, 119, 1);\n          padding: 4px 8px;\n          cursor: pointer;\n          font-family: 'Fira Code', monospace;\n          font-size: 12px;\n          transition: all 0.2s;\n        }\n\n        .zoom-button:hover {\n          background: rgba(0, 255, 0, 0.1);\n          box-shadow: 0 0 5px rgba(0, 255, 0, 0.3);\n        }\n\n        .zoom-button:active {\n          background: rgba(0, 255, 0, 0.2);\n        }\n      `}</style>\n\n      <div className=\"max-w-[1500px] mx-auto\">\n        <div className=\"mb-6 border border-green-400 p-6 rounded-border border-glow-green\">\n          <div className=\"text-center mb-6\">\n            <pre className=\"text-green-400 inline-block text-xs\">\n{`╔═════════════════════════════════════════════════════════════════════════════════════════════╗\n║   ████████╗██████╗ ██╗   ██╗████████╗██╗  ██╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ ██████╗      ║\n║   ╚══██╔══╝██╔══██╗██║   ██║╚══██╔══╝██║  ██║██╔════╝ ██║   ██║██╔══██╗██╔══██╗██╔══██╗     ║\n║      ██║   ██████╔╝██║   ██║   ██║   ███████║██║  ███╗██║   ██║███████║██████╔╝██║  ██║     ║\n║      ██║   ██╔══██╗██║   ██║   ██║   ██╔══██║██║   ██║██║   ██║██╔══██║██╔══██╗██║  ██║     ║\n║      ██║   ██║  ██║╚██████╔╝   ██║   ██║  ██║╚██████╔╝╚██████╔╝██║  ██║██║  ██║██████╔╝     ║\n║      ╚═╝   ╚═╝  ╚═╝ ╚═════╝    ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝      ║\n║                                                                                             ║\n║                         GLOBAL NEWS DETECTION & BIAS NEUTRALIZATION                         ║\n╚═════════════════════════════════════════════════════════════════════════════════════════════╝\n║   █ TRUTHGUARD v0.0.1 - ASCII Edition            ║\n║   └─ Monitoring global narratives in real-time   ║\n╚══════════════════════════════════════════════════╝`}\n            </pre>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n            <div className=\"lg:col-span-2\">\n              <div className=\"border border-green-400 p-4 h-[500px] relative rounded-border border-glow-green\"\n                   onMouseEnter={() => setIsMouseOverGlobe(true)}\n                   onMouseLeave={() => setIsMouseOverGlobe(false)}>\n                <div className=\"absolute top-2 left-2 text-xs text-yellow-400 z-10\">\n                  ◉ GLOBAL TRUTH NETWORK\n                </div>\n\n                <div className=\"absolute top-2 right-2 text-xs text-green-400 z-10 flex items-center gap-2\">\n                  <span>DRAG TO ROTATE</span>\n                  <div className=\"flex gap-1\">\n                    <button onClick={handleZoomOut} className=\"zoom-button rounded-border\">−</button>\n                    <button onClick={handleZoomIn} className=\"zoom-button rounded-border\">+</button>\n                  </div>\n                </div>\n\n                <div\n                  className=\"h-full flex items-center justify-center cursor-move select-none\"\n                  onMouseDown={handleMouseDown}\n                  onMouseMove={handleMouseMove}\n                  onMouseUp={handleMouseUp}\n                  onMouseLeave={handleMouseUp}\n                >\n                  <pre className=\"text-green-400 text-[10px] leading-none\">{renderGlobe()}</pre>\n                </div>\n\n                <div className=\"absolute bottom-2 left-2 text-xs space-y-1\">\n                  <div className=\"text-yellow-400\">◉ LEGEND</div>\n                  <div className=\"grid grid-cols-3 gap-2 text-[10px] text-green-400\">\n                    <div>▓█ Land</div>\n                    <div>~≈ Ocean</div>\n                    <div>▲ Mountains</div>\n                    <div>= Equator</div>\n                    <div>| Prime Meridian</div>\n                    <div>· Grid Lines</div>\n                  </div>\n                  <div className=\"text-yellow-400 mt-2\">◉ ACTIVE REGIONS</div>\n                  <div className=\"grid grid-cols-2 gap-2 text-[10px] text-green-400\">\n                    <div>North America: {stories.filter(s => s.location.lng > -170 && s.location.lng < -50).length}</div>\n                    <div>Europe: {stories.filter(s => s.location.lng > -25 && s.location.lng < 40).length}</div>\n                    <div>Asia: {stories.filter(s => s.location.lng > 40 && s.location.lng < 180).length}</div>\n                    <div>Critical: <span className=\"text-red-400\">{stories.filter(s => s.severity === 'CRITICAL').length}</span></div>\n                  </div>\n                </div>\n\n                <div className=\"absolute bottom-2 right-2 text-xs text-green-400\">\n                  <div>CONNECTIONS: {stories.reduce((acc, s) => acc + (s.connections?.length || 0), 0)}</div>\n                  <div>ROTATION: {Math.round(globeRotation)}°</div>\n                  <div>ZOOM: {Math.round(globeZoom * 100)}%</div>\n                </div>\n\n                {(hoveredStory || selectedStory) && (\n                  <div className=\"absolute top-12 left-2 bg-black border border-green-400 p-2 rounded-border text-xs max-w-xs\">\n                    <div className=\"text-yellow-400 font-bold mb-1\">{(hoveredStory || selectedStory).location.name}</div>\n                    <div className=\"text-green-400\">Category: {(hoveredStory || selectedStory).category}</div>\n                    <div className=\"text-green-400\">Sources: {(hoveredStory || selectedStory).sources}</div>\n                    <div className=\"text-green-400\">Truth: {(hoveredStory || selectedStory).truthScore}%</div>\n                  </div>\n                )}\n              </div>\n\n              <div className={`border border-green-400 p-4 ${getTerminalHeight()} mt-4 overflow-y-auto rounded-border border-glow-green terminal-font`} ref={terminalRef}>\n                <div className=\"text-xs space-y-1 text-green-400\">\n                  {terminalOutput.map((line, index) => (\n                    <div key={index} className=\"font-light\">{line}</div>\n                  ))}\n                  {isProcessing && (\n                    <div className=\"mt-2\">\n                      <div>{ModernProgressBar({ value: scanProgress, width: 40 })}</div>\n                    </div>\n                  )}\n                  <span className=\"blink\">█</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"border border-green-400 p-4 h-[250px] overflow-y-auto rounded-border border-glow-green\">\n                <div className=\"text-sm mb-3 text-yellow-400 flex items-center justify-between\">\n                  <span>◉ DETECTED NARRATIVES</span>\n                  <span className=\"text-xs text-green-400 pulse\">LIVE</span>\n                </div>\n                <div className=\"space-y-2\">\n                  {stories.map((story) => (\n                    <div\n                      key={story.id}\n                      className={`border p-3 cursor-pointer transition-all rounded-border ${\n                        selectedStory?.id === story.id \n                          ? 'story-card-selected border-yellow-400' \n                          : 'border-green-400 hover:story-card-hover'\n                      }`}\n                      onClick={() => analyzeStory(story)}\n                      onMouseEnter={() => setHoveredStory(story)}\n                      onMouseLeave={() => setHoveredStory(null)}\n                    >\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`text-lg ${\n                            story.category === 'DEFENSE' ? 'text-red-400' :\n                            story.category === 'ECONOMICS' ? 'text-green-400' :\n                            story.category === 'CYBER' ? 'text-purple-400' :\n                            story.category === 'ENERGY' ? 'text-yellow-400' :\n                            'text-white'\n                          }`}>\n                            {getMarkerSymbol(story.category, story.severity)}\n                          </span>\n                          <span className=\"text-xs font-bold text-green-400\">{story.category}</span>\n                        </div>\n                        <span className={`text-xs ${\n                          story.severity === 'CRITICAL' ? 'text-red-400 pulse' : \n                          story.severity === 'HIGH' ? 'text-yellow-400' :\n                          'text-green-400'\n                        }`}>\n                          {story.severity}\n                        </span>\n                      </div>\n                      <div className=\"text-xs mb-2 text-gray-300\">{story.title}</div>\n                      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                        <div>\n                          <span className=\"text-yellow-400\">Reliability:</span>\n                          <div className=\"text-green-400\">\n                            {ModernProgressBar({ value: story.truthScore || 0, width: 10, showPercentage: false })} {story.truthScore ?? 0}%\n                          </div>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">BIAS:</span>\n                          <div className={story.bias > 30 ? 'text-red-400' : 'text-yellow-400'}>\n                            {ModernProgressBar({ value: story.bias, width: 10, showPercentage: false })} {story.bias}%\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"mt-2 text-xs text-gray-400\">\n                        {story.sources} sources • {story.location.name}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {selectedStory && (\n                <div className=\"border border-green-400 p-4 rounded-border border-glow-green h-[670px] overflow-y-auto\">\n                  <div className=\"text-sm mb-3 text-yellow-400\">◉ STORY ANALYSIS</div>\n\n                  {isProcessing ? (\n                    <div className=\"text-center py-8\">\n                      <div className=\"text-xs mb-2 text-green-400\">PROCESSING...</div>\n                      <div className=\"text-green-400 text-xs\">\n                        <pre>\n{`    ░░░░░░░░\n  ░████████░\n ░██████████░\n░████████████░\n░████████████░\n ░██████████░\n  ░████████░\n    ░░░░░░░░`}\n                        </pre>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-3 text-xs\">\n                      <div className=\"grid grid-cols-2 gap-3 p-3 border border-green-400 rounded-border\">\n                        <div>\n                          <div className=\"text-yellow-400 mb-1\">TRUTH SCORE</div>\n                          <div className={`text-2xl font-bold ${\n                            (selectedStory.truthScore ?? 0) >= 70 ? 'text-green-400' :\n                            (selectedStory.truthScore ?? 0) >= 50 ? 'text-yellow-400' :\n                            'text-red-400'\n                          }`}>\n                            {selectedStory.truthScore ?? 0}%\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-yellow-400 mb-1\">BIAS LEVEL</div>\n                          <div className={`text-2xl font-bold ${\n                            selectedStory.bias <= 20 ? 'text-green-400' :\n                            selectedStory.bias <= 40 ? 'text-yellow-400' :\n                            'text-red-400'\n                          }`}>\n                            {selectedStory.bias}%\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-1\">\n                        <div>\n                          <span className=\"text-yellow-400\">LOCATION:</span> \n                          <span className=\"text-green-400\">{selectedStory.location.name}, {selectedStory.location.country}</span>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">SOURCES:</span> \n                          <span className=\"text-green-400\">{selectedStory.sources} aggregated</span>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">RELIABILITY:</span> \n                          <span className=\"text-green-400\">{ModernProgressBar({ value: selectedStory.reliability, width: 15 })}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 pt-3 border-t border-green-400\">\n                        <div className=\"text-yellow-400 mb-2\">◉ ABSTRACTED CONTENT:</div>\n                        <div className=\"text-gray-300 bg-black p-3 border-l-4 border-pink-400 rounded-border\">\n                          {selectedStory.abstractedContent ?? 'N/A'}\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 gap-3 mt-3\">\n                        <div>\n                          <div className=\"text-red-400 mb-1\">◉ BIASED CLAIMS:</div>\n                          <div className=\"space-y-1\">\n                            {selectedStory.biasedClaims?.map((claim, i) => (\n                              <div key={i} className=\"text-red-300 pl-2\">× {claim}</div>\n                            )) ?? <div className=\"text-red-300 pl-2\">None</div>}\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-green-400 mb-1\">◉ VERIFIED FACTS:</div>\n                          <div className=\"space-y-1\">\n                            {selectedStory.verifiedFacts?.map((fact, i) => (\n                              <div key={i} className=\"text-green-300 pl-2\">✓ {fact}</div>\n                            )) ?? <div className=\"text-green-300 pl-2\">None</div>}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3\">\n                        <div className=\"text-yellow-400 mb-1\">◉ KEY ENTITIES:</div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {selectedStory.keyPlayers.map(player => (\n                            <span key={player} className=\"border border-green-400 px-2 py-1 text-green-400 rounded-border\">\n                              {player}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n\n                      {selectedStory.connections && selectedStory.connections.length > 0 && (\n                        <div className=\"mt-3 pt-3 border-t border-green-400\">\n                          <div className=\"text-yellow-400 mb-1\">◉ NARRATIVE CONNECTIONS:</div>\n                          {selectedStory.connections.map(connId => {\n                            const conn = stories.find(s => s.id === connId);\n                            return conn ? (\n                              <div key={connId} className=\"text-gray-300 pl-2\">\n                                → {conn.title} <span className=\"text-green-400\">({conn.truthScore ?? 0}% truth)</span>\n                              </div>\n                            ) : null;\n                          })}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"mt-6 border border-green-400 p-3 rounded-border border-glow-green\">\n            <div className=\"flex justify-between items-center text-xs\">\n              <div className=\"flex items-center gap-4\">\n                <span className=\"text-green-400\">█ SYSTEM: TRUTHGUARD v0.0.1</span>\n                <span className=\"text-green-400\">█ MODE: ACTIVE</span>\n              </div>\n              <div className=\"flex items-center gap-4 text-green-400\">\n                <span>█ UPTIME: 99.97%</span>\n                <span>█ ALGORITHMS: <span className=\"text-green-400\">OPTIMAL</span></span>\n                <span>█ QUEUE: <span className=\"text-yellow-400\">{stories.filter(s => s.bias > 30).length}</span> PRIORITY</span>\n              </div>\n              <div className=\"text-green-400 pulse\">███</div>\n            </div>\n          </div>\n\n          <div className=\"mt-4 grid grid-cols-4 gap-4 text-xs\">\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">SOURCES</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.totalSources}</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">AVG TRUTH</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.avgTruthScore}%</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">CRITICAL BIAS</div>\n              <div className=\"text-2xl font-bold text-red-400\">{globalStats.criticalBias}</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">REGIONS</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.activeRegions}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}