{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/components/Globe.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"canvas\": \"Globe-module__KRF5xW__canvas\",\n  \"container\": \"Globe-module__KRF5xW__container\",\n  \"tooltip\": \"Globe-module__KRF5xW__tooltip\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///Users/owentillger/Documents/GitHub/TruthGuard/src/app/components/Globe.tsx"],"sourcesContent":["// components/Globe.tsx\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport styles from './Globe.module.css';\n\n// Define the Story interface\ninterface Story {\n  id: string;\n  title: string;\n  category: 'DEFENSE' | 'ECONOMICS' | 'CYBER' | 'ENERGY' | 'POLITICS';\n  severity: 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW';\n  location: { lat: number; lng: number; name: string; country: string };\n  reliability: number;\n  bias: number;\n  impact: number;\n  sources: number;\n  timestamp: Date;\n  summary: string;\n  keyPlayers: string[];\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL';\n  connections?: string[];\n  truthScore?: number;\n  abstractedContent?: string;\n  biasedClaims?: string[];\n  verifiedFacts?: string[];\n}\n\n// Interface for component props\ninterface GlobeProps {\n  stories?: Story[];\n}\n\n// Utility function to convert lat/lon to 3D vector\nconst latLonToVector3 = (lat: number, lon: number, radius: number): THREE.Vector3 => {\n  const phi = (90 - lat) * (Math.PI / 180);\n  const theta = (lon + 180) * (Math.PI / 180);\n  const x = -radius * Math.sin(phi) * Math.cos(theta);\n  const z = radius * Math.sin(phi) * Math.sin(theta);\n  const y = radius * Math.cos(phi);\n  return new THREE.Vector3(x, y, z);\n};\n\n// Color mapping for categories\nconst categoryColors: Record<Story['category'], number> = {\n  DEFENSE: 0xff0000, // Red\n  ECONOMICS: 0x00ff00, // Green\n  CYBER: 0x0000ff, // Blue\n  ENERGY: 0xffff00, // Yellow\n  POLITICS: 0xff00ff, // Magenta\n};\n\n// Size mapping for severity\nconst severitySizes: Record<Story['severity'], number> = {\n  CRITICAL: 0.04,\n  HIGH: 0.03,\n  MEDIUM: 0.02,\n  LOW: 0.01,\n};\n\nconst Globe: React.FC<GlobeProps> = ({ stories = [] }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const mountRef = useRef<HTMLDivElement>(null);\n  const [selectedStory, setSelectedStory] = useState<Story | null>(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    if (!canvasRef.current || !mountRef.current) return;\n\n    // Initialize Three.js scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef.current,\n      alpha: true, // Transparent background\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    // Set up OrbitControls for rotation, zoom, and pan\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = false;\n    controls.dampingFactor = 0.05;\n    controls.rotateSpeed = 0.5;\n    controls.zoomSpeed = 1.0;\n    controls.panSpeed = 0.5;\n    controls.minDistance = 2;\n    controls.maxDistance = 5;\n\n    // Create globe\n    const globeRadius = 1;\n    const globeGeometry = new THREE.SphereGeometry(globeRadius, 64, 64);\n    const textureLoader = new THREE.TextureLoader();\n\n    // Load and apply texture\n    const earthTexture = textureLoader.load(\n      '/assets/8k_earth_daymap.jpg',\n      () => console.log('Texture loaded successfully')\n    );\n    earthTexture.anisotropy = renderer.capabilities.getMaxAnisotropy(); // Ensures proper texture rendering\n    const earthMaterial = new THREE.MeshPhongMaterial({\n      map: earthTexture,\n      shininess: 10,\n    });\n    const globe = new THREE.Mesh(globeGeometry, earthMaterial);\n    scene.add(globe);\n\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.5);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(5, 3, 5);\n    scene.add(directionalLight);\n\n    // Add hotspot markers\n    const markers: THREE.Mesh[] = [];\n    const markerMap = new Map<string, THREE.Mesh>();\n\n    stories.forEach((story) => {\n      const position = latLonToVector3(story.location.lat, story.location.lng, globeRadius * 1.02);\n      const markerGeometry = new THREE.SphereGeometry(severitySizes[story.severity], 16, 16);\n      const markerMaterial = new THREE.MeshBasicMaterial({ color: categoryColors[story.category] });\n      const marker = new THREE.Mesh(markerGeometry, markerMaterial);\n      marker.position.copy(position);\n      marker.userData = { story };\n      markers.push(marker);\n      markerMap.set(story.id, marker);\n      scene.add(marker);\n    });\n\n    // Add arc lines between connected stories\n    const arcMaterial = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 2 });\n    stories.forEach((story) => {\n      if (story.connections) {\n        story.connections.forEach((connectedId) => {\n          const relatedMarker = markerMap.get(connectedId);\n          if (relatedMarker) {\n            const start = markerMap.get(story.id)!.position;\n            const end = relatedMarker.position;\n            const curve = new THREE.QuadraticBezierCurve3(\n              start,\n              new THREE.Vector3().lerpVectors(start, end, 0.5).normalize().multiplyScalar(globeRadius * 1.5),\n              end\n            );\n            const points = curve.getPoints(50);\n            const arcGeometry = new THREE.BufferGeometry().setFromPoints(points);\n            const arc = new THREE.Line(arcGeometry, arcMaterial);\n            scene.add(arc);\n          }\n        });\n      }\n    });\n\n    // Set initial camera position\n    camera.position.z = 3;\n\n    // Handle mouse clicks for story selection\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    const onClick = (event: MouseEvent) => {\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(markers);\n      if (intersects.length > 0) {\n        const story = intersects[0].object.userData.story as Story;\n        setSelectedStory(story);\n      } else {\n        setSelectedStory(null);\n      }\n    };\n    window.addEventListener('click', onClick);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (!isHovered) {\n        globe.rotation.y += 0.005; // Sweeping rotation when mouse is not hoveringsdf\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const onResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', onResize);\n\n    // Mouse hover to stop rotation\n    const onMouseEnter = () => setIsHovered(true);\n    const onMouseLeave = () => setIsHovered(false);\n\n    mountRef.current.addEventListener('mouseenter', onMouseEnter);\n    mountRef.current.addEventListener('mouseleave', onMouseLeave);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('click', onClick);\n      window.removeEventListener('resize', onResize);\n      mountRef.current.removeEventListener('mouseenter', onMouseEnter);\n      mountRef.current.removeEventListener('mouseleave', onMouseLeave);\n    };\n  }, [stories, isHovered]);\n\n  return (\n    <div className={styles.container} ref={mountRef}>\n      <canvas ref={canvasRef} className={styles.canvas} />\n      {selectedStory && (\n        <div className={styles.tooltip}>\n          <h3>{selectedStory.title}</h3>\n          <p><strong>Location:</strong> {selectedStory.location.name}, {selectedStory.location.country}</p>\n          <p><strong>Category:</strong> {selectedStory.category}</p>\n          <p><strong>Severity:</strong> {selectedStory.severity}</p>\n          <p><strong>Summary:</strong> {selectedStory.summary}</p>\n          <p><strong>Key Players:</strong> {selectedStory.keyPlayers.join(', ')}</p>\n          <p><strong>Sentiment:</strong> {selectedStory.sentiment}</p>\n          <p><strong>Reliability:</strong> {selectedStory.reliability}</p>\n          <p><strong>Bias:</strong> {selectedStory.bias}</p>\n          <p><strong>Impact:</strong> {selectedStory.impact}</p>\n          <p><strong>Sources:</strong> {selectedStory.sources}</p>\n          <p><strong>Timestamp:</strong> {selectedStory.timestamp.toLocaleString()}</p>\n          {selectedStory.truthScore && <p><strong>Truth Score:</strong> {selectedStory.truthScore}</p>}\n          {selectedStory.abstractedContent && <p><strong>Abstract:</strong> {selectedStory.abstractedContent}</p>}\n          {selectedStory.biasedClaims && selectedStory.biasedClaims.length > 0 && (\n            <p><strong>Biased Claims:</strong> {selectedStory.biasedClaims.join(', ')}</p>\n          )}\n          {selectedStory.verifiedFacts && selectedStory.verifiedFacts.length > 0 && (\n            <p><strong>Verified Facts:</strong> {selectedStory.verifiedFacts.join(', ')}</p>\n          )}\n          <button onClick={() => setSelectedStory(null)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Globe;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///Users/owentillger/Documents/GitHub/TruthGuard/src/app/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Globe from './components/Globe'; // Import your Globe component\n\n// Story type definition\ninterface Story {\n  id: string;\n  title: string;\n  category: 'DEFENSE' | 'ECONOMICS' | 'CYBER' | 'ENERGY' | 'POLITICS';\n  severity: 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW';\n  location: { lat: number; lng: number; name: string; country: string };\n  reliability: number;\n  bias: number;\n  impact: number;\n  sources: number;\n  timestamp: Date;\n  summary: string;\n  keyPlayers: string[];\n  sentiment: 'POSITIVE' | 'NEGATIVE' | 'NEUTRAL';\n  connections?: string[];\n  truthScore?: number;\n  abstractedContent?: string;\n  biasedClaims?: string[];\n  verifiedFacts?: string[];\n}\n\n// Enhanced Globe rendering class with better detail\n\nconst ModernProgressBar = ({ value, max = 100, width = 20, showPercentage = true }: { value: number; max?: number; width?: number; showPercentage?: boolean }) => {\n  const filled = Math.round((value / max) * width);\n  const bar = `█`.repeat(filled) + `░`.repeat(width - filled);\n  return showPercentage ? `[${bar}] ${value}%` : `[${bar}]`;\n};\n\nexport default function TruthGuardASCII() {\n  const [stories, setStories] = useState<Story[]>([]);\n  const [selectedStory, setSelectedStory] = useState<Story | null>(null);\n  const [hoveredStory, setHoveredStory] = useState<Story | null>(null);\n  const [terminalOutput, setTerminalOutput] = useState<string[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [globalStats, setGlobalStats] = useState({\n    totalSources: 0,\n    avgTruthScore: 0,\n    criticalBias: 0,\n    activeRegions: 0,\n  });\n\n  const terminalRef = useRef<HTMLDivElement>(null);\n  const animationRef = useRef<number | undefined>(undefined);\n\n  const sampleStories: Story[] = [\n    {\n      id: '1',\n      title: 'NATO Eastern European Military Movement Reports',\n      category: 'DEFENSE',\n      severity: 'CRITICAL',\n      location: { lat: 52.23, lng: 21.01, name: 'Warsaw', country: 'Poland' },\n      reliability: 74,\n      bias: 32,\n      impact: 89,\n      sources: 147,\n      timestamp: new Date(),\n      summary: 'Multiple sources report military movements. Truth analysis indicates 68% factual content with significant bias from all sides.',\n      keyPlayers: ['NATO', 'Pentagon', 'Polish MoD'],\n      sentiment: 'NEGATIVE',\n      connections: ['2', '3'],\n      truthScore: 68,\n      abstractedContent: 'Military alliance conducting routine exercises in member state territory. Scale and timing subject to interpretation bias.',\n      biasedClaims: ['Unprecedented military buildup', 'Aggressive posturing', 'Defensive response only'],\n      verifiedFacts: ['Military exercises scheduled', 'Standard NATO protocols followed', '3,000 personnel involved'],\n    },\n    {\n      id: '2',\n      title: 'Global Semiconductor Supply Chain Analysis',\n      category: 'ECONOMICS',\n      severity: 'HIGH',\n      location: { lat: 25.03, lng: 121.56, name: 'Taipei', country: 'Taiwan' },\n      reliability: 81,\n      bias: 18,\n      impact: 76,\n      sources: 238,\n      timestamp: new Date(),\n      summary: 'Conflicting reports on chip shortage severity. Mean analysis suggests 15-25% capacity impact, not 40% as claimed.',\n      keyPlayers: ['TSMC', 'Samsung', 'Intel'],\n      sentiment: 'NEGATIVE',\n      connections: ['1', '3'],\n      truthScore: 81,\n      abstractedContent: 'Semiconductor production experiencing moderate constraints. Market speculation amplifying actual impact metrics.',\n      biasedClaims: ['Industry collapse imminent', 'No shortage exists', '40% production drop'],\n      verifiedFacts: ['15-25% capacity reduction', 'Supply chain delays averaging 3 weeks', 'Automotive sector most affected'],\n    },\n    {\n      id: '3',\n      title: 'Financial Infrastructure Security Event',\n      category: 'CYBER',\n      severity: 'CRITICAL',\n      location: { lat: 38.89, lng: -77.03, name: 'Washington DC', country: 'USA' },\n      reliability: 58,\n      bias: 45,\n      impact: 92,\n      sources: 89,\n      timestamp: new Date(),\n      summary: 'Unverified claims of coordinated attacks. Truth score low due to conflicting technical details across sources.',\n      keyPlayers: ['FBI', 'CISA', 'Banks'],\n      sentiment: 'NEGATIVE',\n      connections: ['1', '2', '4'],\n      truthScore: 58,\n      abstractedContent: 'Security incident reported at financial institutions. Technical specifics unconfirmed. Standard protocols activated.',\n      biasedClaims: ['State-sponsored attack', 'System completely compromised', 'Minor glitch only'],\n      verifiedFacts: ['Security protocols activated', 'No confirmed data breach', 'Investigation ongoing'],\n    },\n    {\n      id: '4',\n      title: 'European Energy Infrastructure Investment',\n      category: 'ENERGY',\n      severity: 'MEDIUM',\n      location: { lat: 51.50, lng: -0.12, name: 'London', country: 'UK' },\n      reliability: 85,\n      bias: 22,\n      impact: 68,\n      sources: 131,\n      timestamp: new Date(),\n      summary: 'Investment figures vary by €200B across sources. Averaged analysis indicates €350B most likely figure.',\n      keyPlayers: ['EU Commission', 'UK Gov'],\n      sentiment: 'POSITIVE',\n      connections: ['3'],\n      truthScore: 85,\n      abstractedContent: 'Major renewable energy investment announced. Actual commitment level between €300-400B based on source reconciliation.',\n      biasedClaims: ['€500B guaranteed', 'Mere political gesture', 'Immediate implementation'],\n      verifiedFacts: ['€350B median commitment', '5-year rollout plan', '12 member states participating'],\n    },\n    {\n      id: '5',\n      title: 'Pacific Trade Route Disruption Claims',\n      category: 'ECONOMICS',\n      severity: 'HIGH',\n      location: { lat: 35.67, lng: 139.65, name: 'Tokyo', country: 'Japan' },\n      reliability: 72,\n      bias: 28,\n      impact: 83,\n      sources: 156,\n      timestamp: new Date(),\n      summary: 'Shipping delays reported with varying severity. Analysis shows 20% impact, not 60% as some sources claim.',\n      keyPlayers: ['Shipping Corps', 'Port Authorities'],\n      sentiment: 'NEGATIVE',\n      connections: ['2'],\n      truthScore: 72,\n      abstractedContent: 'Moderate shipping delays affecting Pacific routes. Weather and port congestion primary factors.',\n      biasedClaims: ['Complete route closure', '60% capacity loss', 'No significant impact'],\n      verifiedFacts: ['20% delay increase', '2-3 day average delays', 'Alternative routes available'],\n    },\n  ];\n\n  useEffect(() => {\n    setStories(sampleStories);\n\n    const stats = {\n      totalSources: sampleStories.reduce((acc, s) => acc + s.sources, 0),\n      avgTruthScore: Math.round(sampleStories.reduce((acc, s) => acc + (s.truthScore || 0), 0) / sampleStories.length),\n      criticalBias: sampleStories.filter(s => s.bias > 30).length,\n      activeRegions: new Set(sampleStories.map(s => s.location.country)).size,\n    };\n    setGlobalStats(stats);\n\n    addTerminalLine('█ TRUTHGUARD SYSTEM INITIALIZED');\n    addTerminalLine(`├─ Connected to ${stats.activeRegions} regions`);\n    addTerminalLine(`├─ Monitoring ${stats.totalSources} sources`);\n    addTerminalLine(`├─ Global truth average: ${stats.avgTruthScore}%`);\n    addTerminalLine(`└─ System ready`);\n  }, []);\n\n  useEffect(() => {\n\n  }, []);\n\n  const addTerminalLine = (line: string) => {\n    setTerminalOutput(prev => [...prev, line]);\n    setTimeout(() => {\n      if (terminalRef.current) {\n        terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n      }\n    }, 0);\n  };\n\n  const clearTerminal = () => {\n    setTerminalOutput([\n      '█ TRUTHGUARD TERMINAL v0.0.1',\n    ]);\n  };\n\n  const analyzeStory = (story: Story) => {\n    clearTerminal();\n    setIsProcessing(true);\n    setScanProgress(0);\n    setSelectedStory(story);\n\n    addTerminalLine(`├─ ANALYZING: ${story.title}`);\n    addTerminalLine(`├─ Location: ${story.location.name}, ${story.location.country}`);\n    addTerminalLine(`├─ Aggregating ${story.sources} sources...`);\n    addTerminalLine('│');\n\n    const steps = [\n      { p: 20, msg: '├─ Cross-referencing primary sources...' },\n      { p: 40, msg: '├─ Detecting bias patterns...' },\n      { p: 60, msg: '├─ Verifying factual claims...' },\n      { p: 80, msg: '├─ Generating abstracted content...' },\n      { p: 100, msg: '└─ Analysis complete.' },\n    ];\n\n    steps.forEach(({ p, msg }, index) => {\n      setTimeout(() => {\n        setScanProgress(p);\n        addTerminalLine(msg);\n\n        if (p === 100) {\n          setIsProcessing(false);\n          addTerminalLine('|');\n          addTerminalLine(`█ TRUTH SCORE: ${story.truthScore ?? 0}%`);\n          addTerminalLine(`█ BIAS LEVEL: ${story.bias}%`);\n          addTerminalLine('');\n          addTerminalLine('├─ ABSTRACTED CONTENT:');\n          addTerminalLine(`│  ${story.abstractedContent ?? 'N/A'}`);\n          addTerminalLine('│');\n          addTerminalLine('└─ VERIFIED FACTS:');\n          story.verifiedFacts?.forEach(fact => {\n            addTerminalLine(`   ✓ ${fact}`);\n          });\n        }\n      }, index * 400);\n    });\n  };\n\n  const getMarkerSymbol = (category: string, severity: string) => {\n    const symbols: { [key: string]: { [key: string]: string } } = {\n      DEFENSE: { CRITICAL: '◉', HIGH: '●', MEDIUM: '○', LOW: '·' },\n      ECONOMICS: { CRITICAL: '◉', HIGH: '●', MEDIUM: '○', LOW: '·' },\n      CYBER: { CRITICAL: '▲', HIGH: '△', MEDIUM: '▽', LOW: '·' },\n      ENERGY: { CRITICAL: '★', HIGH: '☆', MEDIUM: '✦', LOW: '·' },\n      POLITICS: { CRITICAL: '◆', HIGH: '◇', MEDIUM: '◈', LOW: '·' },\n    };\n    return symbols[category]?.[severity] || '•';\n  };\n\n\n  // Calculate terminal height dynamically to align with story details\n  const getTerminalHeight = () => {\n    if (!selectedStory) return 'h-[250px]';\n    // Match the height of the story details panel when displayed\n    return 'h-[420px]';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-green-400 font-mono p-4\">\n      <style jsx global>{`\n        @import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;700&display=swap');\n\n        body {\n          font-family: 'Fira Code', monospace;\n          background: #000;\n          color: #00ff00;\n          margin: 0;\n          overflow-x: hidden;\n        }\n\n        ::-webkit-scrollbar {\n          width: 8px;\n          height: 8px;\n        }\n\n        ::-webkit-scrollbar-track {\n          background: #001100;\n          border: 1px solid #003300;\n        }\n\n        ::-webkit-scrollbar-thumb {\n          background: rgba(0, 226, 119, 1);\n        }\n\n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.5; }\n        }\n\n        .pulse {\n          animation: pulse 2s infinite;\n        }\n\n        @keyframes blink {\n          0%, 50% { opacity: 1; }\n          51%, 100% { opacity: 0; }\n        }\n\n        .blink {\n          animation: blink 1s infinite;\n        }\n\n        .terminal-font {\n          font-family: 'Fira Code', monospace;\n          font-weight: 400;\n        }\n\n        .rounded-border {\n          border-radius: 4px;\n        }\n\n        .border-glow-green {\n          box-shadow: 0 0 10px rgba(0, 255, 0, 0.1), inset 0 0 10px rgba(0, 255, 0, 0.02);\n        }\n\n        .border-glow-yellow {\n          box-shadow: 0 0 10px rgba(255, 255, 0, 0.1), inset 0 0 10px rgba(255, 255, 0, 0.02);\n        }\n\n        .border-glow-red {\n          box-shadow: 0 0 10px rgba(255, 0, 0, 0.1), inset 0 0 10px rgba(255, 0, 0, 0.02);\n        }\n\n        .story-card-hover {\n          background: rgba(0, 255, 0, 0.03);\n          border-color: rgba(0, 255, 0, 0.8);\n        }\n\n        .story-card-selected {\n          background: rgba(255, 255, 0, 0.05);\n          border-color: rgba(255, 255, 0, 0.8);\n        }\n\n        .zoom-button {\n          background: transparent;\n          border: 1px solid rgba(0, 226, 119, 1);\n          color: rgba(0, 226, 119, 1);\n          padding: 4px 8px;\n          cursor: pointer;\n          font-family: 'Fira Code', monospace;\n          font-size: 12px;\n          transition: all 0.2s;\n        }\n\n        .zoom-button:hover {\n          background: rgba(0, 255, 0, 0.1);\n          box-shadow: 0 0 5px rgba(0, 255, 0, 0.3);\n        }\n\n        .zoom-button:active {\n          background: rgba(0, 255, 0, 0.2);\n        }\n      `}</style>\n\n      <div className=\"max-w-[1500px] mx-auto\">\n        <div className=\"mb-6 border border-green-400 p-6 rounded-border border-glow-green\">\n          <div className=\"text-center mb-6\">\n            <pre className=\"text-green-400 inline-block text-xs\">\n{`╔═════════════════════════════════════════════════════════════════════════════════════════════╗\n║   ████████╗██████╗ ██╗   ██╗████████╗██╗  ██╗ ██████╗ ██╗   ██╗ █████╗ ██████╗ ██████╗      ║\n║   ╚══██╔══╝██╔══██╗██║   ██║╚══██╔══╝██║  ██║██╔════╝ ██║   ██║██╔══██╗██╔══██╗██╔══██╗     ║\n║      ██║   ██████╔╝██║   ██║   ██║   ███████║██║  ███╗██║   ██║███████║██████╔╝██║  ██║     ║\n║      ██║   ██╔══██╗██║   ██║   ██║   ██╔══██║██║   ██║██║   ██║██╔══██║██╔══██╗██║  ██║     ║\n║      ██║   ██║  ██║╚██████╔╝   ██║   ██║  ██║╚██████╔╝╚██████╔╝██║  ██║██║  ██║██████╔╝     ║\n║      ╚═╝   ╚═╝  ╚═╝ ╚═════╝    ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝      ║\n║                                                                                             ║\n║                         GLOBAL NEWS DETECTION & BIAS NEUTRALIZATION                         ║\n╚═════════════════════════════════════════════════════════════════════════════════════════════╝\n║   █ TRUTHGUARD v0.0.1 - ASCII Edition            ║\n║   └─ Monitoring global narratives in real-time   ║\n╚══════════════════════════════════════════════════╝`}\n            </pre>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n            <div className=\"lg:col-span-2\">\n              <div className=\"border border-green-400 p-4 h-[500px] relative rounded-border border-glow-green\">\n                <div className=\"absolute top-2 left-2 text-xs text-yellow-400 z-10\">\n                  ◉ GLOBAL TRUTH NETWORK\n                </div>\n                <div className=\"h-full w-full flex items-center justify-center cursor-move select-none\">\n                  <Globe stories={sampleStories} />\n                </div>\n\n                {(hoveredStory || selectedStory) && (\n                  <div className=\"absolute top-12 left-2 bg-black border border-green-400 p-2 rounded-border text-xs max-w-xs\">\n                    <div className=\"text-yellow-400 font-bold mb-1\">{(hoveredStory || selectedStory).location.name}</div>\n                    <div className=\"text-green-400\">Category: {(hoveredStory || selectedStory).category}</div>\n                    <div className=\"text-green-400\">Sources: {(hoveredStory || selectedStory).sources}</div>\n                    <div className=\"text-green-400\">Truth: {(hoveredStory || selectedStory).truthScore}%</div>\n                  </div>\n                )}\n              </div>\n\n              <div className={`border border-green-400 p-4 ${getTerminalHeight()} mt-4 overflow-y-auto rounded-border border-glow-green terminal-font`} ref={terminalRef}>\n                <div className=\"text-xs space-y-1 text-green-400\">\n                  {terminalOutput.map((line, index) => (\n                    <div key={index} className=\"font-light\">{line}</div>\n                  ))}\n                  {isProcessing && (\n                    <div className=\"mt-2\">\n                      <div>{ModernProgressBar({ value: scanProgress, width: 40 })}</div>\n                    </div>\n                  )}\n                  <span className=\"blink\">█</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"border border-green-400 p-4 h-[250px] overflow-y-auto rounded-border border-glow-green\">\n                <div className=\"text-sm mb-3 text-yellow-400 flex items-center justify-between\">\n                  <span>◉ DETECTED NARRATIVES</span>\n                  <span className=\"text-xs text-green-400 pulse\">LIVE</span>\n                </div>\n                <div className=\"space-y-2\">\n                  {stories.map((story) => (\n                    <div\n                      key={story.id}\n                      className={`border p-3 cursor-pointer transition-all rounded-border ${\n                        selectedStory?.id === story.id \n                          ? 'story-card-selected border-yellow-400' \n                          : 'border-green-400 hover:story-card-hover'\n                      }`}\n                      onClick={() => analyzeStory(story)}\n                      onMouseEnter={() => setHoveredStory(story)}\n                      onMouseLeave={() => setHoveredStory(null)}\n                    >\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`text-lg ${\n                            story.category === 'DEFENSE' ? 'text-red-400' :\n                            story.category === 'ECONOMICS' ? 'text-green-400' :\n                            story.category === 'CYBER' ? 'text-purple-400' :\n                            story.category === 'ENERGY' ? 'text-yellow-400' :\n                            'text-white'\n                          }`}>\n                            {getMarkerSymbol(story.category, story.severity)}\n                          </span>\n                          <span className=\"text-xs font-bold text-green-400\">{story.category}</span>\n                        </div>\n                        <span className={`text-xs ${\n                          story.severity === 'CRITICAL' ? 'text-red-400 pulse' : \n                          story.severity === 'HIGH' ? 'text-yellow-400' :\n                          'text-green-400'\n                        }`}>\n                          {story.severity}\n                        </span>\n                      </div>\n                      <div className=\"text-xs mb-2 text-gray-300\">{story.title}</div>\n                      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                        <div>\n                          <span className=\"text-yellow-400\">Reliability:</span>\n                          <div className=\"text-green-400\">\n                            {ModernProgressBar({ value: story.truthScore || 0, width: 10, showPercentage: false })} {story.truthScore ?? 0}%\n                          </div>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">BIAS:</span>\n                          <div className={story.bias > 30 ? 'text-red-400' : 'text-yellow-400'}>\n                            {ModernProgressBar({ value: story.bias, width: 10, showPercentage: false })} {story.bias}%\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"mt-2 text-xs text-gray-400\">\n                        {story.sources} sources • {story.location.name}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {selectedStory && (\n                <div className=\"border border-green-400 p-4 rounded-border border-glow-green h-[670px] overflow-y-auto\">\n                  <div className=\"text-sm mb-3 text-yellow-400\">◉ STORY ANALYSIS</div>\n\n                  {isProcessing ? (\n                    <div className=\"text-center py-8\">\n                      <div className=\"text-xs mb-2 text-green-400\">PROCESSING...</div>\n                      <div className=\"text-green-400 text-xs\">\n                        <pre>\n{`    ░░░░░░░░\n  ░████████░\n ░██████████░\n░████████████░\n░████████████░\n ░██████████░\n  ░████████░\n    ░░░░░░░░`}\n                        </pre>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-3 text-xs\">\n                      <div className=\"grid grid-cols-2 gap-3 p-3 border border-green-400 rounded-border\">\n                        <div>\n                          <div className=\"text-yellow-400 mb-1\">TRUTH SCORE</div>\n                          <div className={`text-2xl font-bold ${\n                            (selectedStory.truthScore ?? 0) >= 70 ? 'text-green-400' :\n                            (selectedStory.truthScore ?? 0) >= 50 ? 'text-yellow-400' :\n                            'text-red-400'\n                          }`}>\n                            {selectedStory.truthScore ?? 0}%\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-yellow-400 mb-1\">BIAS LEVEL</div>\n                          <div className={`text-2xl font-bold ${\n                            selectedStory.bias <= 20 ? 'text-green-400' :\n                            selectedStory.bias <= 40 ? 'text-yellow-400' :\n                            'text-red-400'\n                          }`}>\n                            {selectedStory.bias}%\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-1\">\n                        <div>\n                          <span className=\"text-yellow-400\">LOCATION:</span> \n                          <span className=\"text-green-400\">{selectedStory.location.name}, {selectedStory.location.country}</span>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">SOURCES:</span> \n                          <span className=\"text-green-400\">{selectedStory.sources} aggregated</span>\n                        </div>\n                        <div>\n                          <span className=\"text-yellow-400\">RELIABILITY:</span> \n                          <span className=\"text-green-400\">{ModernProgressBar({ value: selectedStory.reliability, width: 15 })}</span>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 pt-3 border-t border-green-400\">\n                        <div className=\"text-yellow-400 mb-2\">◉ ABSTRACTED CONTENT:</div>\n                        <div className=\"text-gray-300 bg-black p-3 border-l-4 border-pink-400 rounded-border\">\n                          {selectedStory.abstractedContent ?? 'N/A'}\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 gap-3 mt-3\">\n                        <div>\n                          <div className=\"text-red-400 mb-1\">◉ BIASED CLAIMS:</div>\n                          <div className=\"space-y-1\">\n                            {selectedStory.biasedClaims?.map((claim, i) => (\n                              <div key={i} className=\"text-red-300 pl-2\">× {claim}</div>\n                            )) ?? <div className=\"text-red-300 pl-2\">None</div>}\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-green-400 mb-1\">◉ VERIFIED FACTS:</div>\n                          <div className=\"space-y-1\">\n                            {selectedStory.verifiedFacts?.map((fact, i) => (\n                              <div key={i} className=\"text-green-300 pl-2\">✓ {fact}</div>\n                            )) ?? <div className=\"text-green-300 pl-2\">None</div>}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3\">\n                        <div className=\"text-yellow-400 mb-1\">◉ KEY ENTITIES:</div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {selectedStory.keyPlayers.map(player => (\n                            <span key={player} className=\"border border-green-400 px-2 py-1 text-green-400 rounded-border\">\n                              {player}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n\n                      {selectedStory.connections && selectedStory.connections.length > 0 && (\n                        <div className=\"mt-3 pt-3 border-t border-green-400\">\n                          <div className=\"text-yellow-400 mb-1\">◉ NARRATIVE CONNECTIONS:</div>\n                          {selectedStory.connections.map(connId => {\n                            const conn = stories.find(s => s.id === connId);\n                            return conn ? (\n                              <div key={connId} className=\"text-gray-300 pl-2\">\n                                → {conn.title} <span className=\"text-green-400\">({conn.truthScore ?? 0}% truth)</span>\n                              </div>\n                            ) : null;\n                          })}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"mt-6 border border-green-400 p-3 rounded-border border-glow-green\">\n            <div className=\"flex justify-between items-center text-xs\">\n              <div className=\"flex items-center gap-4\">\n                <span className=\"text-green-400\">█ SYSTEM: TRUTHGUARD v0.0.1</span>\n                <span className=\"text-green-400\">█ MODE: ACTIVE</span>\n              </div>\n              <div className=\"flex items-center gap-4 text-green-400\">\n                <span>█ UPTIME: 99.97%</span>\n                <span>█ ALGORITHMS: <span className=\"text-green-400\">OPTIMAL</span></span>\n                <span>█ QUEUE: <span className=\"text-yellow-400\">{stories.filter(s => s.bias > 30).length}</span> PRIORITY</span>\n              </div>\n              <div className=\"text-green-400 pulse\">███</div>\n            </div>\n          </div>\n\n          <div className=\"mt-4 grid grid-cols-4 gap-4 text-xs\">\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">SOURCES</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.totalSources}</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">AVG TRUTH</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.avgTruthScore}%</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">CRITICAL BIAS</div>\n              <div className=\"text-2xl font-bold text-red-400\">{globalStats.criticalBias}</div>\n            </div>\n            <div className=\"text-center p-3 border border-green-400 rounded-border\">\n              <div className=\"text-yellow-400\">REGIONS</div>\n              <div className=\"text-2xl font-bold text-green-400\">{globalStats.activeRegions}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}